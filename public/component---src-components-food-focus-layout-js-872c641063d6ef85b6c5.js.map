{"version":3,"sources":["webpack:///./src/components/FoodFocusLayout.js","webpack:///./src/components/seo.js"],"names":["BlogPostMain","styled","main","withConfig","displayName","componentId","BlogPostHeaderImage","section","BlogPostTitle","div","BlogPostHeader","BlogPostContent","article","FoodFocusLayout","render","markdownRemark","this","props","data","post","ogImagePath","frontmatter","featuredImage","childImageSharp","fluid","src","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_1__","_seo__WEBPACK_IMPORTED_MODULE_4__","title","image","description","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","style","objectPosition","height","className","dangerouslySetInnerHTML","__html","html","Component","query","SEO","_ref","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","seoImage","site","siteMetadata","siteUrl","file","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_2589443760_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-components-food-focus-layout-js-872c641063d6ef85b6c5.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from './layout'\r\nimport { graphql } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport Img from 'gatsby-image'\r\nimport SEO from './seo'\r\n\r\n\r\nconst BlogPostMain = styled.main `\r\n    .blog-content {\r\n        h2 {\r\n            text-align:center;\r\n        }\r\n    }\r\n`\r\n\r\nconst BlogPostHeaderImage = styled.section`\r\n    position:relative;\r\n    background-color:#464646;\r\n    height:50vh;\r\n    min-height:250px;\r\n    border-bottom:.5rem solid #d2a193;\r\n    \r\n        @media only screen and (min-width:720px) {\r\n            height:65vh;\r\n            }\r\n\r\n    Img {\r\n        filter:opacity(.7);\r\n        height:100%;\r\n        width:100%;\r\n        object-fit:cover;\r\n    }\r\n`\r\n\r\nconst BlogPostTitle = styled.div`\r\n    position:absolute;\r\n    text-align:center;\r\n    top:50%;\r\n    left:50%;\r\n    transform:translate(-50%,-50%);\r\n\r\n        h1 {\r\n            color:white;\r\n            margin:0;\r\n            @media only screen and (min-width:720px) {\r\n                font-size:5rem;\r\n             }\r\n        }\r\n\r\n        h2 {\r\n            color:white;\r\n            opacity:0.9;\r\n            font-size:.8rem;\r\n            font-family:montserrat;\r\n            @media only screen and (min-width:720px) {\r\n                font-size:1.5rem;\r\n             }\r\n        }\r\n\r\n        h4 {\r\n            opacity:0.8;\r\n            color:white;\r\n            font-family:montserrat;\r\n            padding:0;\r\n            margin:0;\r\n        }\r\n`\r\n\r\nconst BlogPostHeader = styled.section`\r\n    border-bottom:.5rem solid #6e929e;\r\n    height:2rem;\r\n`\r\n\r\nconst BlogPostContent = styled.article`\r\n    padding:1rem;\r\n    color:#31343d;\r\n    max-width:1200px;\r\n    margin:auto;\r\n        @media only screen and (min-width:720px) {\r\n            padding:2rem;\r\n            }\r\n    \r\n    \r\n`\r\n\r\nexport default class FoodFocusLayout extends Component {\r\n  render() {\r\n      const { markdownRemark } = this.props.data;\r\n      const post = this.props.data.markdownRemark\r\n      const ogImagePath = post.frontmatter.featuredImage.childImageSharp.fluid.src\r\n\r\n    return (\r\n      <Layout>\r\n            <SEO\r\n             title={markdownRemark.frontmatter.title} \r\n             image={ogImagePath}\r\n             description={post.frontmatter.description}/>\r\n            <BlogPostMain>\r\n            <BlogPostHeaderImage>\r\n            <Img style={{ objectPosition:`center`, height:'100%' }} fluid={markdownRemark.frontmatter.featuredImage.childImageSharp.fluid} />\r\n                \r\n                <BlogPostTitle>\r\n                    <h1>{ markdownRemark.frontmatter.title }</h1>\r\n                </BlogPostTitle>\r\n            </BlogPostHeaderImage>\r\n        <BlogPostHeader />\r\n        <BlogPostContent className=\"blog-content\" dangerouslySetInnerHTML = { {\r\n            __html: markdownRemark.html\r\n         } } />\r\n         </BlogPostMain>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport const query = graphql `\r\n    query FeatureQuery ( $slug: String! ) {\r\n        markdownRemark(frontmatter: {\r\n        slug: {\r\n            eq: $slug\r\n        }\r\n        }) {\r\n        html\r\n        frontmatter {\r\n            title\r\n            location\r\n            date(formatString: \"MMMM DD, YYYY\" )\r\n            slug\r\n            description\r\n            featuredImage {\r\n                childImageSharp {\r\n                  fluid(maxWidth:1600) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n        }\r\n        }\r\n    }\r\n    `;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, image, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const seoImage = `${data.site.siteMetadata.siteUrl}${image || data.file.childImageSharp.fluid.src}`;\r\n        const metaDescription = description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property:`og:url`,\r\n                content:\"https://www.johndory.uk\",\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property:`og:image`,\r\n                content:seoImage,\r\n              },\r\n              {\r\n                property:`og:image:width`,\r\n                content:\"1200\"\r\n              },\r\n              {\r\n                property:`og:image:height`,\r\n                content:\"630\"\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary_large_image`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                name: `twitter:image`,\r\n                content: seoImage,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [\"food\", \"drink\", \"blog\", \"produce\", \"culinary\"],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\nquery DefaultSEOQuery {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      description\r\n      author\r\n      image\r\n      siteUrl\r\n    }\r\n  }\r\n  file(relativePath: { eq: \"IMG_0315.jpg\" }) {\r\n    childImageSharp {\r\n      fluid(maxWidth: 2400) {\r\n        src\r\n      }\r\n    }\r\n  }\r\n}\r\n`"],"sourceRoot":""}